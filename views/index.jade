h1 Overview
p Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.
h6 Subscribe
p Subscribing to a channel is as easy as it is in socket.io itself. Put this into your HTML:
pre.prettyprint.linenums
  | <script src="http://localhost/pharos.min.js?token=your-token"></script>
p And this wherever you'd like to:
pre.prettyprint.linenums
  | // When you expect an object.
  | pharos.on('CHANNEL', function(msg) {
  |   console.log(msg)
  | })
  | // When you expect a string and want it to evaluate.
  | pharos.on('CHANNEL')
h6 Publish
p Publishing can be done via a RESTful API. Check out the docs for clients in different languages.
pre.prettyprint.linenums
  | # Push an object to a single user.
  | curl -d "to=1&message={\\"foo\\":\\"bar\\"}" \\
  |      http://:PASSWORD@example.com/push/CHANNEL
  | # Push an object to multiple users.
  | curl -d "to[]=1&to[]=2&message={\\"foo\\":\\"bar\\"}" \\
  |      http://:PASSWORD@example.com/push/CHANNEL
  | # Broadcast some JavaScript to get evaluated.
  | curl -d "message=alert('Hello World');" \\
  |      http://:PASSWORD@example.com/push/CHANNEL
p
  strong Notice:
  |  You don't need to set an HTTP username. The password alone will do the trick.